# Echoberry Turbo Monorepo Structure

This is a Turborepo monorepo with the following structure:

## Root Configuration

- [package.json](mdc:package.json) - Root package with Turborepo scripts
- [turbo.json](mdc:turbo.json) - Turborepo configuration with build, lint, and dev tasks

## Apps Directory

- [apps/client/](mdc:apps/client/) - React + Vite frontend application
  - [apps/client/src/App.tsx](mdc:apps/client/src/App.tsx) - Main app component with routing
  - [apps/client/src/lib/config.ts](mdc:apps/client/src/lib/config.ts) - Environment configuration
  - [apps/client/src/components/](mdc:apps/client/src/components/) - UI components (shadcn/ui based)
  - [apps/client/src/pages/](mdc:apps/client/src/pages/) - Page components
  - [apps/client/src/hooks/](mdc:apps/client/src/hooks/) - Custom React hooks
- [apps/server/](mdc:apps/server/) - Express.js backend server

## Packages Directory

- [packages/shared/](mdc:packages/shared/) - Shared types and utilities
- [packages/db/](mdc:packages/db/) - Database schema and Drizzle ORM setup
- [packages/ui/](mdc:packages/ui/) - Shared UI components
- [packages/eslint-config/](mdc:packages/eslint-config/) - Shared ESLint configuration
- [packages/typescript-config/](mdc:packages/typescript-config/) - Shared TypeScript configuration

## Key Technologies

- **Frontend**: React 18, Vite, TypeScript, Tailwind CSS, shadcn/ui, Wouter (routing)
- **Backend**: Express.js, TypeScript
- **Database**: Supabase, Drizzle ORM
- **Auth**: Clerk
- **State Management**: TanStack Query (React Query)
- **Build Tool**: Turborepo
- **Styling**: Tailwind CSS with shadcn/ui components
  description:
  globs:
  alwaysApply: true

---
